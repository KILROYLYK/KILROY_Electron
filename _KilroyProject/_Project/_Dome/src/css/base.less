//******Base******//
//******全局变量******//
@px: 1px;
@min_width: 1200px;
@max_width: 1920px;
@opacity: 0.75;
@scale: 2;
@time: 0.6s;
@src_img: '../img/';

@color_1: #ffffff;
@color_2: #000000;

//******全局方法******//
//定位
.position(@p:absolute,@t:0,@r:0,@b:0,@l:0,@z:0) {
  position: @p;
  top: @t;
  left: @l;
  right: @r;
  bottom: @b;
  z-index: @z;
}

//背景
.bg(@img,@w:auto,@h:auto,@set_wh:false) when (@set_wh=false) {
  background: url("@{src_img}@{img}");
  background-repeat: no-repeat;
  background-position: center;
  background-size: @w @h;
}

//背景（设置宽高）
.bg(@img,@w:auto,@h:auto,@set_wh:false) when (@set_wh=true) {
  width: @w;
  height: @h;
  background: url("@{src_img}@{img}");
  background-repeat: no-repeat;
  background-position: center;
  background-size: @w @h;
}

//懒加载背景
.bgLazy(@w:auto,@h:auto,@set_wh:false) when (@set_wh=false) {
  background-repeat: no-repeat !important;
  background-position: center !important;
  background-size: @w @h !important;
}

//懒加载背景（设置宽高）
.bgLazy(@w:auto,@h:auto,@set_wh:false) when (@set_wh=true) {
  width: @w;
  height: @h;
  background-repeat: no-repeat !important;
  background-position: center !important;
  background-size: @w @h !important;
}

//背景径向渐变
.gradientLinear(@deg:0,@color_state,@color_end) {
  background: linear-gradient(@deg, @color_state, @color_end);
}

//背景圆形渐变
.gradientRadial(@color_state,@color_end) {
  background: radial-gradient(@color_state, @color_end);
}

//灰度
.gray(@percentage) {
  filter: grayscale(@percentage);
}

//高斯模糊
.filter(@blur:10*@px) {
  filter: blur(@blur);
}

//清除模糊
.filterClear() {
  filter: blur(0);
}

//文案
.font(@a:auto,@h:auto,@c:@color_2,@s:12*@px,@w:false) when (@w=false) {
  text-align: @a;
  line-height: @h;
  color: @c;
  font-size: @s;
}

//文案（加粗）
.font(@a:auto,@h:auto,@c:@color_2,@s:12*@px,@w:false) when (@w=true) {
  text-align: @a;
  line-height: @h;
  color: @c;
  font-size: @s;
  font-weight: 600;
}

//文字间距
.fontSpacing(@w) {
  text-indent: @w;
  letter-spacing: @w;
}

//文字渐变
.fontClip(@position,@color_state,@color_end) {
  background: linear-gradient(to @position, @color_state, @color_end);
  -webkit-background-clip: text;
  color: transparent;
}

//单行文字省略
.ellipsis() {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

//多行文字省略
.ellipsisMultiline(@line:2) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: @line;
  -webkit-box-orient: vertical;
  text-overflow: ellipsis;
  word-wrap: break-word;
}

//禁止选中文字
.noSelectText() {
  -webkit-touch-callout: none;
  user-select: none;
}

//防止内边距撑开盒子
.borderBox() {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

//阴影
.shadow(@style:0 0 20*@px fade(black,10),@inset:false) when (@inset=false) {
  box-shadow: @style;
}

//内阴影
.shadow(@style:0 0 20*@px fade(black,10),@inset:false) when (@inset=true) {
  box-shadow: inset @style;
}

//位移
.transform(@style:translate(0,0)) {
  transform: @style;
}

//位移原点
.transformOrigin(@x:center,@y:center) {
  transform-origin: @x @y;
}

//过度
.transition(@style:all @time) {
  transition: @style;
}

//延时过渡
.transitionDelay(@x:0,@y:0,@t:1s,@delay:~'') {
  @transition: opacity @t @delay, transform @t @delay;
  opacity: 0;
  .transform(translate(@x, @y));
  .transition(@transition);
  pointer-events: none;
}

//开启延时过渡
.transitionDelayActive() {
  opacity: 1 !important;
  .transform(translate(0, 0)) !important;
  pointer-events: all !important;
}

//创建动画
.creatAnimation(@am_name,@am_fun) {
  @keyframes @am_name {
    @am_fun();
  }

  @-moz-keyframes @am_name {
    @am_fun();
  }

  @-webkit-keyframes @am_name {
    @am_fun();
  }

  @-o-keyframes @am_name {
    @am_fun();
  }
}

//动画
.animation(@style) {
  animation: @style;
}

//动画延时
.animationDelay(@delay_time) {
  animation-delay: @delay_time;
}

//隐藏滚动条
.scroll() {
  -webkit-overflow-scrolling: touch;
  //&::-webkit-scrollbar {
  //  width: 0 !important
  //}
  //-ms-overflow-style: none;
  //overflow: -moz-scrollbars-none;
}

//******Sprite******//
//******Sprite******//
@publicW: 0*@px;
@publicH: 0*@px;
.spritePublic(@sprite:false) when (@sprite=false) {
  .bg('public.png', @publicW, @publicH);
}

.spritePublic(@sprite:false) when (@sprite=true) {
  .bg('public.png', @publicW*@scale, @publicH*@scale);
}
